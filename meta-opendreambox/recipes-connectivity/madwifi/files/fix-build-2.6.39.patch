diff -Naur org/ath/if_ath.c madwifi-ng-r3314-20080131/ath/if_ath.c
--- org/ath/if_ath.c	2011-11-26 17:21:30.000000000 +0100
+++ madwifi-ng-r3314-20080131/ath/if_ath.c	2011-11-26 17:52:59.023541302 +0100
@@ -4463,11 +4463,30 @@
 {
 	struct ieee80211com *ic = &sc->sc_ic;
 	struct ieee80211vap *vap;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,35)
+	struct netdev_hw_addr *ha;
+#else
 	struct dev_mc_list *mc;
+#endif
 	u_int32_t val;
 	u_int8_t pos;
 
 	mfilt[0] = mfilt[1] = 0;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,35)
+	/* XXX locking */
+	TAILQ_FOREACH(vap, &ic->ic_vaps, iv_next) {
+		struct net_device *dev = vap->iv_dev;
+		netdev_for_each_mc_addr(ha, dev) {
+			/* calculate XOR of eight 6-bit values */
+			val = LE_READ_4(ha->addr + 0);
+			pos = (val >> 18) ^ (val >> 12) ^ (val >> 6) ^ val;
+			val = LE_READ_4(ha->addr + 3);
+			pos ^= (val >> 18) ^ (val >> 12) ^ (val >> 6) ^ val;
+			pos &= 0x3f;
+			mfilt[pos / 32] |= (1 << (pos % 32));
+		}
+	}
+#else
 	/* XXX locking */
 	TAILQ_FOREACH(vap, &ic->ic_vaps, iv_next) {
 		struct net_device *dev = vap->iv_dev;
@@ -4481,6 +4500,7 @@
 			mfilt[pos / 32] |= (1 << (pos % 32));
 		}
 	}
+#endif
 }
 
 static void
diff -Naur org/ath/if_athvar.h madwifi-ng-r3314-20080131/ath/if_athvar.h
--- org/ath/if_athvar.h	2011-11-26 17:21:30.000000000 +0100
+++ madwifi-ng-r3314-20080131/ath/if_athvar.h	2011-11-26 17:42:48.871547991 +0100
@@ -971,7 +971,7 @@
 #endif
 
 /* Protects the device from concurrent accesses */
-#define	ATH_LOCK_INIT(_sc)		init_MUTEX(&(_sc)->sc_lock)
+#define	ATH_LOCK_INIT(_sc)		sema_init(&(_sc)->sc_lock,1)
 #define	ATH_LOCK_DESTROY(_sc)
 #define	ATH_LOCK(_sc)			down(&(_sc)->sc_lock)
 #define	ATH_UNLOCK(_sc)			up(&(_sc)->sc_lock)
diff -Naur org/ath_rate/amrr/amrr.c madwifi-ng-r3314-20080131/ath_rate/amrr/amrr.c
--- org/ath_rate/amrr/amrr.c	2011-11-26 17:21:30.000000000 +0100
+++ madwifi-ng-r3314-20080131/ath_rate/amrr/amrr.c	2011-11-26 17:41:46.151548678 +0100
@@ -482,54 +482,54 @@
  */
 
 static ctl_table ath_rate_static_sysctls[] = {
-	{ .ctl_name	= CTL_AUTO,
-	  .procname	= "interval",
+	{ .procname	= "interval",
 	  .mode		= 0644,
 	  .data		= &ath_rateinterval,
 	  .maxlen	= sizeof(ath_rateinterval),
 	  .extra1	= &minrateinterval,
 	  .extra2	= &maxint,
-	  .proc_handler	= proc_dointvec_minmax
+	  .proc_handler	= proc_dointvec_minmax,
+	  CTLNAME(CTL_AUTO)
 	},
-	{ .ctl_name	= CTL_AUTO,
-	  .procname	= "max_success_threshold",
+	{ .procname	= "max_success_threshold",
 	  .mode		= 0644,
 	  .data		= &ath_rate_max_success_threshold,
 	  .maxlen	= sizeof(ath_rate_max_success_threshold),
 	  .extra1	= &min_threshold,
 	  .extra2	= &maxint,
-	  .proc_handler	= proc_dointvec_minmax
+	  .proc_handler	= proc_dointvec_minmax,
+	  CTLNAME(CTL_AUTO)
 	},
-	{ .ctl_name	= CTL_AUTO,
-	  .procname	= "min_success_threshold",
+	{ .procname	= "min_success_threshold",
 	  .mode		= 0644,
 	  .data		= &ath_rate_min_success_threshold,
 	  .maxlen	= sizeof(ath_rate_min_success_threshold),
 	  .extra1	= &min_threshold,
 	  .extra2	= &maxint,
-	  .proc_handler	= proc_dointvec_minmax
+	  .proc_handler	= proc_dointvec_minmax,
+	  CTLNAME(CTL_AUTO)
 	},
 	{ 0 }
 };
 static ctl_table ath_rate_table[] = {
-	{ .ctl_name	= CTL_AUTO,
-	  .procname	= "rate",
+	{ .procname	= "rate",
 	  .mode		= 0555,
-	  .child	= ath_rate_static_sysctls
+	  .child	= ath_rate_static_sysctls,
+	  CTLNAME(CTL_AUTO)
 	}, { 0 }
 };
 static ctl_table ath_ath_table[] = {
-	{ .ctl_name	= DEV_ATH,
-	  .procname	= "ath",
+	{ .procname	= "ath",
 	  .mode		= 0555,
-	  .child	= ath_rate_table
+	  .child	= ath_rate_table,
+	  CTLNAME(DEV_ATH)
 	}, { 0 }
 };
 static ctl_table ath_root_table[] = {
-	{ .ctl_name	= CTL_DEV,
-	  .procname	= "dev",
+	{ .procname	= "dev",
 	  .mode		= 0555,
-	  .child	= ath_ath_table
+	  .child	= ath_ath_table,
+	  CTLNAME(CTL_DEV)
 	}, { 0 }
 };
 static struct ctl_table_header *ath_sysctl_header;
diff -Naur org/ath_rate/onoe/onoe.c madwifi-ng-r3314-20080131/ath_rate/onoe/onoe.c
--- org/ath_rate/onoe/onoe.c	2011-11-26 17:21:30.000000000 +0100
+++ madwifi-ng-r3314-20080131/ath_rate/onoe/onoe.c	2011-11-26 17:52:35.823541559 +0100
@@ -427,52 +427,52 @@
  * Static (i.e. global) sysctls.
  */
 static ctl_table ath_rate_static_sysctls[] = {
-	{ .ctl_name	= CTL_AUTO,
-	  .procname	= "interval",
+	{ .procname	= "interval",
 	  .mode		= 0644,
 	  .data		= &ath_rateinterval,
 	  .maxlen	= sizeof(ath_rateinterval),
 	  .extra1	= &minrateinterval,
 	  .extra2	= &maxint,
-	  .proc_handler	= proc_dointvec_minmax
+	  .proc_handler	= proc_dointvec_minmax,
+	  CTLNAME(CTL_AUTO)
 	},
-	{ .ctl_name	= CTL_AUTO,
-	  .procname	= "raise",
+	{ .procname	= "raise",
 	  .mode		= 0644,
 	  .data		= &ath_rate_raise,
 	  .maxlen	= sizeof(ath_rate_raise),
 	  .extra1	= &minpercent,
 	  .extra2	= &maxpercent,
-	  .proc_handler	= proc_dointvec_minmax
+	  .proc_handler	= proc_dointvec_minmax,
+	  CTLNAME(CTL_AUTO)
 	},
-	{ .ctl_name	= CTL_AUTO,
-	  .procname	= "raise_threshold",
+	{ .procname	= "raise_threshold",
 	  .mode		= 0644,
 	  .data		= &ath_rate_raise_threshold,
 	  .maxlen	= sizeof(ath_rate_raise_threshold),
-	  .proc_handler	= proc_dointvec
+	  .proc_handler	= proc_dointvec,
+	  CTLNAME(CTL_AUTO)
 	},
 	{ 0 }
 };
 static ctl_table ath_rate_table[] = {
-	{ .ctl_name	= CTL_AUTO,
-	  .procname	= "rate",
+	{ .procname	= "rate",
 	  .mode		= 0555,
-	  .child	= ath_rate_static_sysctls
+	  .child	= ath_rate_static_sysctls,
+	  CTLNAME(CTL_AUTO)
 	}, { 0 }
 };
 static ctl_table ath_ath_table[] = {
-	{ .ctl_name	= DEV_ATH,
-	  .procname	= "ath",
+	{ .procname	= "ath",
 	  .mode		= 0555,
-	  .child	= ath_rate_table
+	  .child	= ath_rate_table,
+	  CTLNAME(DEV_ATH)
 	}, { 0 }
 };
 static ctl_table ath_root_table[] = {
-	{ .ctl_name	= CTL_DEV,
-	  .procname	= "dev",
+	{ .procname	= "dev",
 	  .mode		= 0555,
-	  .child	= ath_ath_table
+	  .child	= ath_ath_table,
+	  CTLNAME(CTL_DEV)
 	}, { 0 }
 };
 static struct ctl_table_header *ath_sysctl_header;
diff -Naur org/net80211/ieee80211_scan.c madwifi-ng-r3314-20080131/net80211/ieee80211_scan.c
--- org/net80211/ieee80211_scan.c	2011-11-26 17:21:30.000000000 +0100
+++ madwifi-ng-r3314-20080131/net80211/ieee80211_scan.c	2011-11-26 17:56:48.559538788 +0100
@@ -97,7 +97,12 @@
 static void scan_restart_pwrsav(unsigned long);
 static void scan_next(unsigned long);
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,39)
 spinlock_t channel_lock = SPIN_LOCK_UNLOCKED;
+#else
+spinlock_t channel_lock = __SPIN_LOCK_UNLOCKED(channel_lock);
+EXPORT_SYMBOL(channel_lock);
+#endif
 static LIST_HEAD(channels_inuse);
 
 struct channel_inuse {
diff -Naur org/include/compat.h madwifi-ng-r3314-20080131/include/compat.h
--- org/include/compat.h	2011-11-26 18:44:55.455507154 +0100
+++ madwifi-ng-r3314-20080131/include/compat.h	2011-11-26 18:44:12.455507624 +0100
@@ -38,6 +38,8 @@
 #ifndef _ATH_COMPAT_H_
 #define _ATH_COMPAT_H_
 
+#include <linux/version.h>
+
 /* Compatibility with older Linux kernels */
 #ifdef __KERNEL__
 #include <linux/types.h>
@@ -45,6 +47,10 @@
 #include <linux/netdevice.h>
 #endif
 
+#if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32)
+#define AUTOCONF_INCLUDED
+#endif
+
 #if !defined(__KERNEL__) || !defined (__bitwise)
 #define __le16 u_int16_t
 #define __le32 u_int32_t
